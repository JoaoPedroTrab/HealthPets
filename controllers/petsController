const express = require('express');
const bcrypt = require('bcrypt');
require('dotenv').config();

const router = express.Router();

const Pets = require('../models/pets');


router.post('/pets', async (req, res) => {
    const { nomePet, racaPet, nascimentoPet, pesoPet } = req.body;

    const infoPet = {
        nomePet, racaPet, nascimentoPet, pesoPet
    }
    try {
        await Pets.create(infoPet);
        res.status(201).json(infoPet);
    } catch (error) {
        res.status(500).json({ error: error });
    }
});

router.get('/pets', async (req, res) => {
    try {
        const pets = await Pets.find();
        res.status(200).json(pets);
    } catch (error) {
        res.status(500).json({ error: error });
    }
});

router.get('/pets/:id', async (req, res) => {
    try {
        const pets = await Pets.findOne({ _id: req.params.id });
        if (!pets) {
            res.status(422).json({ mensagem: "Pet não encontrado" });
            return
        }
        res.status(200).json(pets);
    } catch (error) {
        res.status(500).json({ error: error });
    }
});

router.patch('/pets/:id', async (req, res) => {
    try {
        const id = req.params.id;
        const { nomePet, racaPet, nascimentoPet, pesoPet } = req.body;

        const pet = {
            nomePet, racaPet, nascimentoPet, pesoPet
        }

        const updatePet = await Pets.updateOne({ _id: id }, pet);

        if (updatePet.matchedCount === 0) {
            res.status(422).json({ mensagem: "Pet não encontrado" });
            return
        }
        res.status(200).json(usu);
    } catch (error) {
        res.status(500).json({ error: error });
    }
});

router.delete('/:id', async (req, res) => {
    try {
        const id = req.params.id;
        const pet = await Pets.findOne({ _id: id });
        if (!pet) {
            res.status(422).json({ mensagem: "Pet não encontrado" });
            return;
        }
        await Pets.deleteOne({ _id: id });
        res.status(200).json({ mensagem: "Excluído com sucesso!" });
    } catch (error) {
        res.status(500).json({ error: error });
    }
});

module.exports = router;